{"version":3,"sources":["components/CartIcon.js","components/Header.js","redux/actions/inventoryActions.js","components/StoreCard.js","pages/Store.js","components/CartCard.js","redux/actions/cartActions.js","components/CartModifier.js","components/ProductCard.js","pages/Cart.js","pages/Product.js","App.js","serviceWorker.js","redux/reducers/inventory.js","redux/reducers/cart.js","redux/reducers/index.js","index.js"],"names":["CartIcon","productsInCart","useSelector","state","cartReducer","Button","variant","startIcon","component","Link","to","length","useStyles","makeStyles","theme","root","title","color","appBar","backgroundColor","Header","classes","className","AppBar","position","Toolbar","IconButton","Typography","noWrap","inventoryActions","ADD_INVENTORY","val","type","payload","ADD_INVENTORY_ITEM","REMOVE_INVENTORY_ITEM","StoreCard","product","Paper","elevation","id","name","price","toLocaleString","alt","src","window","location","origin","Store","useState","inventory","setInventory","dispatch","useDispatch","useEffect","inventoryData","Container","map","index","key","CartCard","subTotal","products","reduce","total","item","amount","cartActions","ADD_CART_ITEM","REMOVE_CART_ITEM","MODIFY_ITEM_AMOUNT","amountModifier","display","flexDirection","alignItems","justifyContent","paper","borderRadius","width","palette","background","boxShadow","shadows","padding","spacing","top","left","transform","outline","button","margin","textAlign","addItem","CartModifier","inCart","setAmount","open","setOpen","handleClose","modalBodyInShop","modalBodyInCart","onClick","Modal","onClose","aria-labelledby","aria-describedby","disabled","ProductCard","Cart","Product","allProducts","inventoryReducer","useLocation","selectedProduct","find","pathname","split","App","exact","path","Boolean","hostname","match","action","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd7ee9f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction CartIcon() {\r\n    const productsInCart = useSelector((state) => state.cartReducer);\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                startIcon={<ShoppingCartIcon />}\r\n                component={Link}\r\n                to={\"/cart\"}>\r\n                {productsInCart.length}\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartIcon;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CartIcon from \"../components/CartIcon\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        color: \"white\",\r\n    },\r\n    appBar: {\r\n        backgroundColor: \"#005361\",\r\n    },\r\n}));\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                        component={Link}\r\n                        to={\"/\"}>\r\n                        <HomeIcon />\r\n                    </IconButton>\r\n                    <Typography\r\n                        className={classes.title}\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component={Link}\r\n                        to={\"/\"}\r\n                    >\r\n                        Kornit Demo\r\n                    </Typography>\r\n                    <CartIcon />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","const inventoryActions = {\r\n    ADD_INVENTORY: val => {\r\n        return {\r\n            type: \"ADD_INVENTORY\",\r\n            payload: val\r\n        };\r\n    },\r\n    ADD_INVENTORY_ITEM: val => {\r\n        return {\r\n            type: \"ADD_INVENTORY_ITEM\",\r\n            payload: val\r\n        };\r\n    },\r\n    REMOVE_INVENTORY_ITEM: val => {\r\n        return {\r\n            type: \"REMOVE_INVENTORY_ITEM\",\r\n            payload: val\r\n        };\r\n    },\r\n};\r\n\r\nexport default inventoryActions","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction StoreCard({ product }) {\r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={5}\r\n        className={\"storeCard\"}\r\n        component={Link}\r\n        to={`/product/${product.id}`}>\r\n        <div className={\"product-name\"}> {product.name + \" \"} </div>\r\n        <div className={\"product-price\"}> {product.price.toLocaleString()} &#36; </div>\r\n        {/* <img src={`/icons/${iconNumber}.png`} alt='weather-icon'/> */}\r\n        <img className={\"product-image\"} alt={\"product\"} src={window.location.origin + `/images/${product.id}.jpg`}></img>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StoreCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport inventoryActions from \"../redux/actions/inventoryActions\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport StoreCard from \"../components/StoreCard\";\r\nimport \"./Store.css\";\r\n\r\nimport { inventory as inventoryData } from \"../mock-data/Inventory.json\";\r\nfunction Store() {\r\n    const [inventory, setInventory] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    //mock data fetching instead of actual API call\r\n    useEffect(() => {\r\n        setInventory(inventoryData);\r\n        dispatch(inventoryActions[\"ADD_INVENTORY\"](inventoryData));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Container>\r\n            <div className={\"wrapper\"}>\r\n                {inventory &&\r\n                    inventory.map((product, index) => (\r\n                        <StoreCard product={product} key={index} />\r\n                    ))}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction CartCard({ products }) {\r\n  // const productsInCart = useSelector((state) => state.cartReducer );\r\n  const subTotal = products.reduce((total, item) => {\r\n    return total + item.price * item.amount;\r\n  }, 0);\r\n  return (\r\n    <Paper className=\"cart-card\">\r\n        <div className=\"total\">  subtotal:{\" \"+subTotal.toLocaleString()+\" \"}&#36;</div>\r\n        <Button className=\"buy-button\" color=\"primary\">Buy these items</Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CartCard;\r\n","const cartActions = {\r\n  ADD_CART_ITEM: (val) => {\r\n    return {\r\n      type: \"ADD_CART_ITEM\",\r\n      payload: val,\r\n    };\r\n  },\r\n  REMOVE_CART_ITEM: (val) => {\r\n    return {\r\n      type: \"REMOVE_CART_ITEM\",\r\n      payload: val,\r\n    };\r\n  },\r\n  MODIFY_ITEM_AMOUNT: (val) => {\r\n    return {\r\n      type: \"MODIFY_ITEM_AMOUNT\",\r\n      payload: val,\r\n    };\r\n  },\r\n};\r\n\r\nexport default cartActions;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport cartActions from \"../redux/actions/cartActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    amountModifier: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n        position: \"absolute\",\r\n        borderRadius: \"5px\",\r\n        width: 300,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 2, 2),\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        display: \"flex\",\r\n        outline: \"none\",\r\n        justifyContent: \"space-between\",\r\n        \r\n    },\r\n    button: {\r\n        margin: \"5px\",\r\n        padding: \"5px\",\r\n        textAlign: \"center\",\r\n    },\r\n    addItem:{\r\n        alignItems:\"baseline\"\r\n    }\r\n}));\r\n\r\nfunction CartModifier({ product, inCart }) {\r\n    const classes = useStyles();\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleAddToCart = () => {\r\n        if (amount !== 0) {\r\n            dispatch(\r\n                cartActions[\"ADD_CART_ITEM\"]({\r\n                    id: product.id,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    amount: amount,\r\n                })\r\n            );\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleRemoveFromCart = () => {\r\n        dispatch(\r\n            cartActions[\"REMOVE_CART_ITEM\"]({\r\n                id: product.id,\r\n                name: product.name,\r\n                price: product.price,\r\n                amount: amount,\r\n            })\r\n        );\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleModifyAmount = () => {\r\n        if (amount !== 0) {\r\n            dispatch(\r\n                cartActions[\"MODIFY_ITEM_AMOUNT\"]({\r\n                    id: product.id,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    amount: amount,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    const modalBodyInShop = (\r\n        <div className={classes.paper}>\r\n            <div>{product.name} has been added to cart</div>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                component={Link}\r\n                to={\"/cart\"}>\r\n                View Cart\r\n      </Button>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                component={Link}\r\n                to={\"/\"}>\r\n                Continue Shoping\r\n      </Button>\r\n        </div>\r\n    );\r\n\r\n    const modalBodyInCart = (\r\n        <div className={classes.paper}>\r\n            <div className={classes.addItem}>Are you sure you want to remove {product.name} from cart?</div>\r\n            <Button\r\n                onClick={handleClose}\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\">\r\n                Cancel\r\n      </Button>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleRemoveFromCart}>\r\n                Remove Item\r\n      </Button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\">\r\n                {inCart ? modalBodyInCart : modalBodyInShop}\r\n            </Modal>\r\n            <div className={classes.amountModifier}>\r\n                <Button\r\n                    className={classes.button}\r\n                    disabled={amount === 0 ? true : false}\r\n                    onClick={() => setAmount((state) => state - 1)}>\r\n                    -\r\n        </Button>\r\n                <div>{amount} </div>\r\n                <Button\r\n                    className={classes.button}\r\n                    onClick={() => setAmount((state) => state + 1)}>\r\n                    +\r\n        </Button>\r\n            </div>\r\n            <>\r\n                <Button\r\n                    className={classes.button}\r\n                    onClick={inCart ? handleOpen : handleAddToCart}>\r\n                    {inCart ? \"Remove Item\" : \"Add to cart\"}\r\n                </Button>\r\n                {inCart ? (\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={handleModifyAmount}>\r\n                        {amount > 0 ? \"Modify Amount of items to \" + amount : \"Modify Amount\"}\r\n\r\n                    </Button>\r\n                ) : null}\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartModifier;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CartModifier from \"./CartModifier\";\r\n\r\nfunction ProductCard({ product, inCart }) {\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Paper className=\"product-card\" elevation={5}>\r\n                    <div className={\"product-name\"}> {product.name + \" \"} </div>\r\n                    <div className={\"product-price\"}> {inCart ? product.amount + \" items in cart, \" + product.price.toLocaleString() + \" each\" : product.price.toLocaleString()} &#36; </div>\r\n                    <div className={\"product-decription\"}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                        eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </div>\r\n                    <CartModifier\r\n                        className={\"product-amount\"}\r\n                        product={product}\r\n                        inCart={inCart}\r\n                    />\r\n                    <img\r\n                        className={\"product-card-image\"}\r\n                        alt={\"product\"}\r\n                        src={window.location.origin + `/images/${product.id}.jpg`} />\r\n\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CartCard from \"../components/CartCard\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport \"./Cart.css\";\r\n\r\nfunction Cart() {\r\n  const productsInCart = useSelector((state) => state.cartReducer);\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h2 className=\"cart-title\">Cart</h2>\r\n        <CartCard className={\"cart-card\"} products={productsInCart} />\r\n        {productsInCart &&\r\n          productsInCart.map((product, index) => (\r\n            <ProductCard product={product} key={index} inCart={true} />\r\n          ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\n\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport \"./Product.css\";\r\n\r\nfunction Product() {\r\n  const allProducts = useSelector((state) => state.inventoryReducer);\r\n  const location = useLocation();\r\n  const selectedProduct = allProducts.find(\r\n    (product) =>\r\n      product.id ==\r\n      location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1]\r\n  );\r\n  return (\r\n    <div>\r\n      {selectedProduct ? (\r\n        <ProductCard product={selectedProduct} />\r\n      ) : (\r\n          <Redirect to=\"/\" />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Store from \"./pages/Store\";\r\nimport Cart from \"./pages/Cart\";\r\nimport Product from \"./pages/Product\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Store />\r\n          </Route>\r\n          <Route exact path=\"/cart\">\r\n            <Cart />\r\n          </Route>\r\n          <Route path=\"/product/:id\">\r\n            <Product />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst inventoryReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n        case 'ADD_INVENTORY':\r\n\t\t\treturn [...action.payload]\r\n\t\tcase 'ADD_INVENTORY_ITEM':\r\n\t\t\treturn [...state, action.payload]\r\n\t\tcase 'REMOVE_INVENTORY_ITEM':\r\n\t\t\treturn [...state.filter(item=>item.id!==action.payload.id)]\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default inventoryReducer;","const cartReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CART_ITEM\":\r\n      return state.find((item) => item.id === action.payload.id)\r\n        ? [\r\n          ...state.map((item) =>\r\n            item.id === action.payload.id\r\n              ? { ...item, amount: item.amount + action.payload.amount }\r\n              : item\r\n          ),\r\n        ]\r\n        : [...state, action.payload];\r\n\r\n    case \"REMOVE_CART_ITEM\":\r\n      return [...state.filter((item) => item.id !== action.payload.id)];\r\n    case \"MODIFY_ITEM_AMOUNT\":\r\n      return [\r\n        ...state.map((item) =>\r\n          item.id === action.payload.id ? action.payload : item\r\n        ),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { combineReducers } from 'redux';\r\nimport inventoryReducer from './inventory' \r\nimport cartReducer from './cart'\r\n\r\nconst rootReducer = combineReducers({\r\n\tinventoryReducer,\r\n\tcartReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers';\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}